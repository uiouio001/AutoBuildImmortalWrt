# 此工作流99% 使用luci 24.10.x 来构建 极个别机型使用快照版和23.05.4版本来构建
# 23.05.4 特有机型列表
# abt_asr3000-ubootmod
# cetron_ct3003-stock
# cmcc_a10
# cmcc_rax3000m-emmc-ubootmod
# cmcc_rax3000m-nand-ubootmod
# imou_lc-hx3001-ubootmod
# jcg_q30 捷成
# jcg_q30-ubootmod
# qihoo_360t7-ubootmod
# xiaomi_mi-router-wr30u-112m-nmbm
# xiaomi_redmi-router-ax6000 该机型在24.10.2 分化为2个机型
# —————————————————————————————24.10.2—————————————————————————————————
# xiaomi_redmi-router-ax6000-stock ————原厂默认 bootloader（stock）版本
# xiaomi_redmi-router-ax6000-ubootmod—————改装过 bootloader 的版本（ubootmod）

name: Build Wireless Router ImmortalWrt 24.10.x

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: "请选择mtk路由器型号"
        required: true
        options:
          - cmcc_rax3000m-emmc-ubootmod
          - cmcc_rax3000m-nand-ubootmod
          - cmcc_rax3000m
          - cmcc_rax3000me
        default: cmcc_rax3000m-emmc-ubootmod
      custom_router_ip:
        description: "请设置路由器的管理地址 格式:192.168.x.1 或 10.x.x.1"
        required: true
        default: "192.168.6.1"
      enable_store:
        description: "集成 iStore 商店"
        required: false
        type: boolean
        default: true
      include_docker:
        description: "是否编译 Dockerman 插件"
        required: true
        default: true
        type: boolean
      USE_XR30_LED_DTS:
        description: "是否使用XR30 Led配置文件"
        required: true
        default: false
        type: boolean
      WIFI_DRIVER_VERSION:
        description: "选择WiFi驱动版本"
        required: true
        default: 'v7.6.7.2-fw-20240823(recommend)'
        type: choice
        options:
        - v7.6.7.2-fw-20240823(recommend)
        - v7.6.6.1-fw-20230306(recommend)
        - v7.6.7.2-fw-default
        - v7.6.7.2-fw-20230306
        - v7.6.7.2-fw-20230330
        - v7.6.7.2-fw-20230411
        - v7.6.7.2-fw-20230717
        - v7.6.7.2-fw-20231024
        - v7.6.6.1-fw-default
        - v7.6.6.1-fw-20230330
        - v7.6.6.1-fw-20230411
        - v7.6.6.1-fw-20230717
        - v7.6.6.1-fw-20231024
        - v7.6.6.1-fw-20240823
      USE_NX30PRO_EEPROM:
        description: "使用nx30pro高功能eeprom提高信号强度"
        required: true
        default: false
        type: boolean
      enable_pppoe:
        description: "是否配置PPPoE拨号信息?"
        required: true
        default: false
        type: boolean
      pppoe_account:
        description: "宽带账号 (若启用PPPoE)"
        required: false
      pppoe_password:
        description: "宽带密码 (若启用PPPoE)"
        required: false


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: |
          chmod +x ${{ github.workspace }}/mediatek-filogic/build24.sh
      
      - name: Save Custom Router IP into OpenWrt files
        run: |
          mkdir -p "${{ github.workspace }}/custom"
          echo "${{ github.event.inputs.custom_router_ip }}" > "${{ github.workspace }}/custom/custom_router_ip.txt"
          echo "您设置的路由器管理地址是:${{ github.event.inputs.custom_router_ip }}"
          # 后续步骤会将该文件映射到路由器/etc/config/custom_router_ip.txt 以便用于开机脚本99-custom.sh读取用户设置的ip


      - name: Validate PPPoE Inputs
        if: github.event.inputs.enable_pppoe == 'true'
        run: |
          if [[ -z "${{ github.event.inputs.pppoe_account }}" || -z "${{ github.event.inputs.pppoe_password }}" ]]; then
            echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
            exit 1
          fi
      
      - name: Enable Store integration
        if: github.event.inputs.enable_store == 'true'
        run: |
          echo 'CUSTOM_PACKAGES="$CUSTOM_PACKAGES luci-app-store"' >> shell/custom-packages.sh
          echo "✅ 已追加 luci-app-store"
      
      - name: Set Use XR30 LED DTS file
        if: github.event.inputs.USE_XR30_LED_DTS == 'true'
        run: |
          echo "✅ 设置使用XR30的Led配置文件"
      
      - name: Set WiFi Driver Version
        run: |
          driver_version=$(echo "${{ github.event.inputs.WIFI_DRIVER_VERSION }}" | sed -E 's/^(v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          driver_firmware=$(echo "${{ github.event.inputs.WIFI_DRIVER_VERSION }}" | sed -E 's/.*fw-([0-9]{8}|default).*/\1/g')
          echo "wifi_driver_version=$driver_version" >> $GITHUB_ENV
          echo "wifi_driver_firmware=$driver_firmware" >> $GITHUB_ENV
          echo "✅ 您选择的WiFi驱动版本是: $driver_version-fw-$driver_firmware"
 
      - name: Use nx30pro eeprom and fixed WiFi MAC address
        run: |
          if [ "${{ github.event.inputs.USE_NX30PRO_EEPROM }}" == "true" ]; then
            echo "✅ 使用nx30pro的高功率eeprom(2.4G是23dBm、5G是22dBm)"
          else
            echo "❎ 使用默认功率eeprom(2.4G是25dBm、5G是24dBm)"
          fi
      
      - name: Build Wireless ImmortalWrt 24.10.2
        run: |
          profile="${{ github.event.inputs.profile }}"
          echo "Building for profile: $profile"
          include_docker="${{ github.event.inputs.include_docker }}"
          # 默认平台
          echo "platform=mediatek/filogic" >> $GITHUB_ENV

          # 读取 ipq807x 机型文件
          ipq807x_models=$(cat mediatek-filogic/model/ipq807x.txt | tr '\n' '|')
          ipq807x_models=${ipq807x_models%|}
          if [[ "$profile" =~ ^($ipq807x_models)$ ]]; then
              case_tag="qualcommax-ipq807x-openwrt-24.10.2"
              case_platform="qualcommax/ipq807x"
          fi

          # 读取 mt7621 机型文件
          mt7621_models=$(cat mediatek-filogic/model/mt7621.txt | tr '\n' '|')
          mt7621_models=${mt7621_models%|}
          if [[ "$profile" =~ ^($mt7621_models)$ ]]; then
              case_tag="ramips-mt7621-openwrt-24.10.2"
              case_platform="ramips/mt7621"
          fi

          # 读取 bcm53xx/generic 机型文件
          bcm53xx_models=$(cat mediatek-filogic/model/bcm53xx.txt | tr '\n' '|')
          bcm53xx_models=${bcm53xx_models%|}
          if [[ "$profile" =~ ^($bcm53xx_models)$ ]]; then
              case_tag="bcm53xx-generic-openwrt-24.10.2"
              case_platform="bcm53xx/generic"
          fi

          # 判断机型
          case "$profile" in
              glinet_gl-b2200)
                  # 虽然它是高通ipq40xx平台 但由于都是gl机型 故放在一起 找起来方便
                  tag=ipq40xx-generic-openwrt-24.10.2
                  echo "platform=ipq40xx/generic" >> $GITHUB_ENV
                  ;;
              glinet_gl-axt1800|glinet_gl-ax1800)
                  # 虽然它是高通ipq60xx平台 但由于都是gl机型 故放在一起 找起来方便
                  tag=qualcommax-ipq60xx-snapshot
                  echo "platform=qualcommax/ipq60xx" >> $GITHUB_ENV
                  ;;
              cudy_tr3000-256mb-v1)
                  # 由于256MB版本tr3000 还没有出正式版24.10.2 故使用快照版本来构建
                  tag=mediatek-filogic-24.10-SNAPSHOT
                  ;;
              # 下列机型目前没有24.10 因此采用23.05.4分支来构建
              cmcc_rax3000m-emmc-ubootmod | \
              cmcc_rax3000m-nand-ubootmod | \
              cmcc_a10 | \
              abt_asr3000-ubootmod | \
              imou_lc-hx3001-ubootmod | \
              jcg_q30 | \
              jcg_q30-ubootmod | \
              xiaomi_mi-router-wr30u-112m-nmbm | \
              cetron_ct3003-stock | \
              xiaomi_redmi-router-ax6000 | \
              qihoo_360t7-ubootmod)
                  tag=mediatek-filogic-openwrt-23.05.4
                  ls ${{ github.workspace }}/mediatek-filogic/
                  cp ${{ github.workspace }}/mediatek-filogic/build23.sh ${{ github.workspace }}/mediatek-filogic/build24.sh
                  ;;
              *)
                  # 如果前面匹配了 ipq807x、mt7621、bcm53xx 机型文件，则使用对应 tag
                  if [[ -n "$case_tag" ]]; then
                      tag=$case_tag
                      echo "platform=$case_platform" >> $GITHUB_ENV
                  else
                      # 默认分支
                      tag=mediatek-filogic-openwrt-24.10.2
                  fi
                  ;;
            esac
          
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/mediatek-filogic/files/etc/uci-defaults:/home/build/immortalwrt/files/etc/uci-defaults" \
              -v "${{ github.workspace }}/mediatek-filogic/files/etc/config:/home/build/immortalwrt/files/etc/config" \
              -v "${{ github.workspace }}/arch/arch.conf:/home/build/immortalwrt/files/etc/opkg/arch.conf" \
              -v "${{ github.workspace }}/shell:/home/build/immortalwrt/shell" \
              -v "${{ github.workspace }}/mediatek-filogic/build24.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              -e USE_XR30_LED_DTS=${{ github.event.inputs.USE_XR30_LED_DTS }} \
              -e WIFI_DRIVER_VERSION=${{ env.wifi_driver_version }} \
              -e WIFI_DRIVER_FIRMWARE=${{ env.wifi_driver_firmware }} \
              -e USE_NX30PRO_EEPROM=${{ github.event.inputs.USE_NX30PRO_EEPROM }} \
              -e ENABLE_PPPOE=${{ github.event.inputs.enable_pppoe }} \
              -e PPPOE_ACCOUNT=${{ github.event.inputs.pppoe_account }} \
              -e PPPOE_PASSWORD=${{ github.event.inputs.pppoe_password }} \
            immortalwrt/imagebuilder:$tag /bin/bash /home/build/immortalwrt/build.sh
      
      - name: Create info
        run: |
          cat > ${{ github.workspace }}/router-info.md <<EOF
          ## 📡 路由器后台信息

          - 🏠 **后台地址**: ${{ github.event.inputs.custom_router_ip }}
          - 👤 **用户名**: root
          - 🔑 **密码**: 无
          EOF

          if [ "${{ github.event.inputs.include_docker }}" == "true" ]; then
            extra_content="#### 默认带docker"
            echo -e "\n$extra_content" >> ${{ github.workspace }}/router-info.md
          else
            echo -e "\n#### 不带docker" >> ${{ github.workspace }}/router-info.md
          fi
          
          echo "release_tag=${{ github.event.inputs.profile }}-$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          
      - name: Upload ImmortalWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: ${{ env.release_tag }}
          name: ImmortalWrt-Wireless
          body_path: ${{ github.workspace }}/router-info.md
          files: |
            ${{ github.workspace }}/bin/targets/${{ env.platform }}/*
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
